# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow checks out code, performs a Codacy security scan
# and integrates the results with the
# GitHub Advanced Security code scanning feature.  For more information on
# the Codacy security scan action usage and parameters, see
# https://github.com/codacy/codacy-analysis-cli-action.
# For more information on Codacy Analysis CLI in general, see
# https://github.com/codacy/codacy-analysis-cli.

name: Codacy Security Scan

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '00 04 * * 4'

permissions:
  contents: read

jobs:
  codacy-security-scan:
    permissions:
      contents: read
      security-events: write
      actions: read
    name: Codacy Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@v4.4.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          verbose: true
          output: results.sarif
          format: sarif
          gh-code-scanning-compat: true
          max-allowed-issues: 2147483647

      - name: Split SARIF file if needed
        run: |
          python scripts/split_sarif.py results.sarif 20

      - name: Upload SARIF results file - Part 1
        if: ${{ steps.check-part1.outputs.file-exists == 'true' }}
        uses: github/codeql-action/upload-sarif@v3.25.6
        with:
          sarif_file: results_part1.sarif
          category: part1

      - name: Upload SARIF results file - Part 2
        if: ${{ steps.check-part2.outputs.file-exists == 'true' }}
        uses: github/codeql-action/upload-sarif@v3.25.6
        with:
          sarif_file: results_part2.sarif
          category: part2

      - name: Check if part1 SARIF file exists
        id: check-part1
        run: echo "::set-output name=file-exists::$(test -e results_part1.sarif && echo true || echo false)"

      - name: Check if part2 SARIF file exists
        id: check-part2
        run: echo "::set-output name=file-exists::$(test -e results_part2.sarif && echo true || echo false)"