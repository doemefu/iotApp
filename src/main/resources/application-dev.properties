spring.docker.compose.enabled=false
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect
spring.jpa.open-in-view=false
spring.sql.init.mode=always
spring.datasource.url=jdbc:mariadb://localhost:3306/${MYSQL_DATABASE}?allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=${MYSQL_ROOT_PASSWORD}
##SSL stuff for https
#server.port=8443
# Replace domain_name.jks with the name of your certificate file.
#server.ssl.key-store=/etc/ssl/certs/keystore.p12
# Enter the password that is contained in the jks-password.txt file.
#server.ssl.key-store-password=${KEYSTORE_PASSWORD}
#Set the certificate keystore type to JKS. The certificate keystore type for a PFX certificate is PKCS12.
#server.ssl.keyStoreType = PKCS12
#server.ssl.key-alias=springPKCS12
## Testscenario
furchert.iotapp.jwtExpirationMs=120000
furchert.iotapp.jwtRefreshExpirationMs=86400000
furchert.iotapp.influxToken=${INFLUX_TOKEN}
furchert.iotapp.influxOrg=${INFLUX_ORG}
furchert.iotapp.influxBucket=${INFLUX_BUCKET}
furchert.iotapp.influxHost=${INFLUX_HOST}
furchert.iotapp.mqttBroker=tcp://cloud.tbz.ch:1883